<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABpAOwDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKZ5uVB2/59q4jwZ+078OPiP8Tta8E+HfH3gnX/ABn4bRpN
        W0DTtdtbrVNLVWVCZ7ZHMkQDOikuowXUHqKAO6ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        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
        BRRRQAUUUUAf/9k=
</value>
  </data>
</root>